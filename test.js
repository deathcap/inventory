// Generated by CoffeeScript 1.7.0
(function() {
  var Inventory, ItemPile, tabsToCommas, test;

  test = require('tape');

  Inventory = require('./');

  ItemPile = require('itempile');

  tabsToCommas = function(s) {
    return s.replace(/\t/g, ',');
  };

  test('size', function(t) {
    var a, b, c;
    a = new Inventory();
    t.equal(a.size(), 10);
    t.equal(a.width, 10);
    t.equal(a.height, 1);
    b = new Inventory(5);
    t.equal(b.size(), 5);
    t.equal(b.width, 5);
    t.equal(b.height, 1);
    c = new Inventory(3, 2);
    t.equal(c.size(), 3 * 2);
    t.equal(c.width, 3);
    t.equal(c.height, 2);
    t.throws(function() {
      return new Inventory(1, 0);
    });
    t.throws(function() {
      return new Inventory(0, 1);
    });
    t.throws(function() {
      return new Inventory(0, 0);
    });
    t.throws(function() {
      return new Inventory(1, -1);
    });
    t.throws(function() {
      return new Inventory(-1, 1);
    });
    t.throws(function() {
      return new Inventory(-1, -1);
    });
    return t.end();
  });

  test('give', function(t) {
    var excess, expectedInvs, i, inv, _i;
    inv = new Inventory();
    expectedInvs = ['42:dirt,,,,,,,,,', '64:dirt,20:dirt,,,,,,,,', '64:dirt,62:dirt,,,,,,,,', '64:dirt,64:dirt,40:dirt,,,,,,,', '64:dirt,64:dirt,64:dirt,18:dirt,,,,,,', '64:dirt,64:dirt,64:dirt,60:dirt,,,,,,', '64:dirt,64:dirt,64:dirt,64:dirt,38:dirt,,,,,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,16:dirt,,,,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,58:dirt,,,,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,36:dirt,,,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,14:dirt,,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,56:dirt,,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,34:dirt,', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,12:dirt', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,54:dirt', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt', '64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt,64:dirt'];
    for (i = _i = 0; _i <= 16; i = ++_i) {
      excess = inv.give(new ItemPile('dirt', 42));
      t.equal(tabsToCommas(inv + ''), expectedInvs[i]);
      if (i === 15) {
        t.equal(excess, 32);
      }
      if (i === 16) {
        t.equal(excess, 42);
      }
    }
    return t.end();
  });

  test('give large', function(t) {
    var inv;
    inv = new Inventory();
    inv.give(new ItemPile('dirt', 200));
    console.log(inv + '');
    t.equal(tabsToCommas(inv + ''), '64:dirt,64:dirt,64:dirt,8:dirt,,,,,,');
    return t.end();
  });

  test('give fill partial', function(t) {
    var inv;
    inv = new Inventory();
    inv.array[1] = new ItemPile('dirt', 9);
    t.equal(tabsToCommas(inv + ''), ',9:dirt,,,,,,,,');
    inv.give(new ItemPile('dirt', 1));
    t.equal(tabsToCommas(inv + ''), ',10:dirt,,,,,,,,');
    return t.end();
  });

  test('take', function(t) {
    var inv;
    inv = new Inventory();
    inv.give(new ItemPile('dirt', 200));
    inv.take(new ItemPile('dirt', 1));
    t.equal(tabsToCommas(inv + ''), '63:dirt,64:dirt,64:dirt,8:dirt,,,,,,');
    inv.take(new ItemPile('dirt', 100));
    console.log(inv + '');
    t.equal(tabsToCommas(inv + ''), ',27:dirt,64:dirt,8:dirt,,,,,,');
    return t.end();
  });

  test('clear', function(t) {
    var inv;
    inv = new Inventory();
    inv.give(new ItemPile('dirt', 200));
    inv.take(new ItemPile('dirt', 1));
    t.equal(tabsToCommas(inv + ''), '63:dirt,64:dirt,64:dirt,8:dirt,,,,,,');
    inv.clear();
    t.equal(tabsToCommas(inv + ''), ',,,,,,,,,');
    return t.end();
  });

  test('transferTo', function(t) {
    var inv, inv2;
    inv = new Inventory();
    inv.give(new ItemPile('dirt', 200));
    inv.take(new ItemPile('dirt', 1));
    t.equal(tabsToCommas(inv + ''), '63:dirt,64:dirt,64:dirt,8:dirt,,,,,,');
    inv2 = new Inventory();
    inv.transferTo(inv2);
    t.equal(tabsToCommas(inv + ''), ',,,,,,,,,');
    t.equal(tabsToCommas(inv2 + ''), '63:dirt,64:dirt,64:dirt,8:dirt,,,,,,');
    inv.give(new ItemPile('diamond', 1));
    inv2.give(new ItemPile('gold', 1));
    t.equal(tabsToCommas(inv + ''), '1:diamond,,,,,,,,,');
    t.equal(tabsToCommas(inv2 + ''), '63:dirt,64:dirt,64:dirt,8:dirt,1:gold,,,,,');
    return t.end();
  });

  test('fromString', function(t) {
    var inv;
    inv = Inventory.fromString('\t10:dirt\t20:grass');
    console.log(inv + '');
    t.equals(inv.size(), 3);
    t.equals(inv.get(0), void 0);
    t.equals(inv.get(1) + '', '10:dirt');
    t.equals(inv.get(2) + '', '20:grass');
    return t.end();
  });

}).call(this);
