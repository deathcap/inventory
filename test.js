// Generated by CoffeeScript 1.6.3
(function() {
  var Inventory, Item, ItemStack, test, _ref;

  test = require('tape');

  _ref = require('./'), Inventory = _ref.Inventory, ItemStack = _ref.ItemStack, Item = _ref.Item;

  test('ItemStack create default', function(t) {
    var a;
    a = new ItemStack('dirt');
    t.equal(a.item, 'dirt');
    t.equal(a.count, 1);
    t.deepEqual(a.tags, {});
    return t.end();
  });

  test('ItemStack empty tags', function(t) {
    var a;
    a = new ItemStack('dirt', 1, {});
    t.deepEqual(a.tags, {});
    return t.end();
  });

  test('ItemStack increase', function(t) {
    var a, excess;
    a = new ItemStack('dirt', 1);
    excess = a.increase(10);
    t.equal(a.count, 11);
    t.equal(excess, 0);
    excess = a.increase(100);
    t.equal(a.count, 64);
    t.equal(excess, 47);
    return t.end();
  });

  test('ItemStack merge', function(t) {
    var a, b, excess;
    a = new ItemStack('dirt', 1);
    b = new ItemStack('dirt', 80);
    excess = a.mergeStack(b);
    t.equal(a.item, b.item);
    t.equal(a.count + b.count, 80 + 1);
    t.equal(excess, b.count);
    t.equal(a.count, 64);
    t.equal(b.count, 17);
    return t.end();
  });

  test('ItemStack split', function(t) {
    var a, b;
    a = new ItemStack('dirt', 64);
    b = a.splitStack(32);
    t.equal(a.count, 32);
    t.equal(b.count, 32);
    t.equal(a.item, b.item);
    t.equal(a.tags, b.tags);
    return t.end();
  });

  test('ItemStack split bad', function(t) {
    var a, b;
    a = new ItemStack('dirt', 10);
    b = a.splitStack(1000);
    t.equal(b, false);
    t.equal(a.count, 10);
    return t.end();
  });

  test('ItemStack toString', function(t) {
    var a, b;
    a = new ItemStack('dirt', 42);
    console.log(a.toString());
    t.equal(a + '', '42:dirt');
    b = new ItemStack('magic', 1, {
      foo: -7
    });
    console.log(b.toString());
    t.equal(b + '', '1:magic {"foo":-7}');
    return t.end();
  });

  test('Inventory', function(t) {
    var excess, i, inv, _i;
    inv = new Inventory();
    for (i = _i = 0; _i <= 15; i = ++_i) {
      console.log("\n\n1. " + i);
      excess = inv.give(new ItemStack('dirt', 42));
      console.log('excess', excess);
      console.log(inv + "");
    }
    return t.end();
  });

}).call(this);
